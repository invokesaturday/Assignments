1. Describe the main differences between the CSS Flexbox layout model and the CSS Grid layout model. When would you choose to use one over the other?


Ans: The key difference between the Flexbox and the Grid layout models lies in their layout strategies and how they handle the arrangeent of elements.

Flexbox is primarily designed for one-dimensional layouts, focusing on distributing space and aligning items along a single axis (either horizontally or vertically). It's best suited for layouts where you have a row or column of items, such as navigation menus, card-based designs, or centering content within a container.

CSS Grid is designed for two-dimensional layouts, allowing you to define both rows and columns. It creates a grid of cells  where content can be placed in any cell or span accross multiple cells. CSS grid is ideal for complex grid-based designs like magazine layouts, forms, and any layout where content needs to be placed in a precise grid structure.

Choosing between Flexbox and CSS Grid depends on your specific layout requirements.

You might choose Flexbox when you need to arrange items along a single axis, for example, when creating navigation bars, header/footer layouts, or aligning elements within a container. Flexbox is great for responsive designs where items can vary in size.

You might choose CSS Grid when you need to create more complex, two-dimensionsal layouts with rows and columns. It's particularly useful when you have a grid-like structure, such as galleries, forms with multiple fields, or any design that requires precise control over both rows and columns. 

In some cases, you may even combine both Flexbox and CSS Grid within a single layout to leverage the strengths of each model for different parts of your webpage.